{"version":3,"sources":["assets/images/panda@3x.png","assets/images/microphone.svg","assets/images/microphone-disabled.svg","assets/images/pencil-paper.svg","assets/images/x.svg","pages/InputSelector/index.tsx","assets/images/microphone-white.svg","assets/images/microphone-initial.svg","assets/images/microphone-active.svg","assets/images/Panda-Listening Pose 1-v12.png","assets/images/Panda-Talking Pose 1-v12.png","assets/images/arrow.svg","assets/images/bar-0-8.svg","config/aws.ts","pages/AnswerAudio/index.tsx","assets/images/speech-bubble-center.svg","pages/Thankyou/index.tsx","pages/AudioResult/index.tsx","App.tsx","reportWebVitals.ts","store/reducers/isLoadingReducer.ts","store/action/actionTypes/priceActionTypes.ts","store/reducers/priceReducer.ts","store/reducers/rootReducer.ts","store/services/priceServices.ts","store/action/actionCreators/priceActionCreators.ts","store/sagas/priceSaga.ts","store/sagas/rootSaga.ts","store/configureStore.ts","index.tsx"],"names":["InputSelector","useReactMediaRecorder","video","askPermissionOnMount","status","startRecording","stopRecording","naviage","useNavigate","useState","isActive","setIsActive","micFlag","useEffect","InputSelectorWrapper","CloseImg","src","closeImg","PandaImg","panda","HowTalk","SpeakButton","onClick","MicrophoneImg","microphone","microphoneDisable","SpeakText","WriteButton","PencilPaperImg","pencilpaper","WriteText","PoweredBy","styled","div","img","span","Config","api_url","configFormData","headers","AnswerAudio","mediaBlobUrl","question","hidden","questionCount","setQuestionCount","uuidv4","userId","uploadFile","a","fetch","then","r","blob","formData","FormData","append","axios","post","res","data","console","log","success","catch","state","nextQuestionFunc","AnswerAudioWrapper","PandaTalkImg","pandaTalkingImg","PandaListenImg","pandaListeningImg","Message","ArrowImg","BlueCircle","Circle","microphoneInit","microphoneActive","MicVolume","micVolumeImg","Bottom","LabelProgress","ProgressBar","StepCircle","active","StepBar","Button","defaults","baseURL","arrowImg","props","Thankyou","customsupport","useLocation","ThankWrapper","SpeechBubbleImg","SpeechBubbleCenter","AudioResult","AudioResultWrapper","href","target","MainRoute","useRoutes","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getLoadingMatches","actionType","exec","isLoadingReducer","action","matches","type","requestName","requestStatus","SET_PRICE","GET_PRICE","GET_PRICE_SUCCESS","initialState","price","rootReducer","combineReducers","isLoading","actions","fetchPrice","get","getPriceSuccess","onLoadPrice","watchOnLoadPrice","priceSaga","put","call","actionCreators","takeEvery","actionTypes","all","fork","rootSaga","PriceSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04ec545a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/panda@3x.0307dea2.png\";","export default __webpack_public_path__ + \"static/media/microphone.134ad72d.svg\";","export default __webpack_public_path__ + \"static/media/microphone-disabled.b69bcaaa.svg\";","export default __webpack_public_path__ + \"static/media/pencil-paper.10cbd50b.svg\";","export default __webpack_public_path__ + \"static/media/x.f5d35ec0.svg\";","import React, { useState, useEffect  } from \"react\";\nimport styled from \"styled-components\"\nimport { useNavigate } from 'react-router-dom';\nimport {useReactMediaRecorder} from \"react-media-recorder\";\nimport panda from 'src/assets/images/panda@3x.png';\nimport microphone from 'src/assets/images/microphone.svg';\nimport microphoneDisable from 'src/assets/images/microphone-disabled.svg';\nimport pencilpaper from 'src/assets/images/pencil-paper.svg'\nimport closeImg from 'src/assets/images/x.svg'\n\nexport default function InputSelector() {\n  const { status, startRecording, stopRecording } = useReactMediaRecorder({video: false, askPermissionOnMount:false});\n  let naviage = useNavigate();\n  const [isActive, setIsActive] = useState(false);\n  const [micFlag, setMicFlag] = useState(true);\n  const onClick = () => {\n     if(!isActive){\n      startRecording();\n      // stopRecording();\n    } \n      else\n        stopRecording();\n      setIsActive(!isActive);\n    }\n  useEffect(() => {\n    if(status == 'recording'){\n      naviage('/input-selector/answer-audio');\n    }\n  },[status]);\n  \n  return (\n    <InputSelectorWrapper>\n      <CloseImg src={closeImg}/>\n      <PandaImg src={panda}/>\n      <HowTalk>How should we talk?</HowTalk>\n      <SpeakButton onClick={onClick}>\n          <MicrophoneImg src={micFlag ? microphone : microphoneDisable}/>\n      </SpeakButton>\n      <SpeakText>Press To Speak</SpeakText>\n      <WriteButton>\n        <PencilPaperImg src={pencilpaper} />\n      </WriteButton>\n      <WriteText>Press To Write</WriteText>\n      <PoweredBy>\n      *All feedback is recorded.<br/>\n      Powered by PerceptivePanda for {\"Datasaur.ai\"}\n      </PoweredBy>\n    </InputSelectorWrapper>\n  )\n}\nconst InputSelectorWrapper = styled.div`\n    position: absolute;\n    width: 400px;\n    height: 450px;\n    padding: 0;\n    top: 50%;\n    left: 50%;\n    margin: -225px 0 0 -200px;\n    background-color: #e6eefd;\n    opacity: 1.0;\n    border-radius: 10px;\n    box-shadow: 0 0 12.5px -1px rgba(0, 0, 0, 0.1);   \n    background-color: #fff;\n    span {\n      text-align: center;\n      font-family: 'Muli', sans-serif;\n      font-size: 14px;\n      font-weight: bold;\n      font-stretch: normal;\n      font-style: normal;\n      line-height: normal;\n      letter-spacing: -0.21px;\n      text-align: center;\n      color: #399aff;\n      cursor: pointer;\n    }\n    @media(min-width: 1000px){\n        transform: scale(1.7);\n    }\n`\nconst PandaImg = styled.img`\n  position: absolute;\n  width: 143px;\n  height: 143px;\n  top: 50px;\n  left: 125px;\n`\nconst CloseImg = styled.img`\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  top: 10px;\n  right: 5px;\n  opacity: 0.5;\n  cursor: pointer;\n`\nconst HowTalk = styled.div`\n  position: absolute;\n  top: 230px;\n  width: 100%;\n  font-family: 'Muli', sans-serif;\n  font-size: 14px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 0.35px;\n  text-align: center;\n  color: #535353;\n  text-transform: uppercase;    \n`\nconst SpeakButton = styled.div`\n  position: absolute;\n  top: 275px;\n  left: 100px;\n  height: 75px;\n  width: 75px;\n  border: solid 2px #4d9ff5;\n  border-radius: 50%;\n  display: inline-block;\n  cursor: pointer; \n`\nconst WriteButton = styled.div`\n  position: absolute;\n  top: 275px;\n  left: 225px;\n  height: 75px;\n  width: 75px;\n  border: solid 2px #4d9ff5;\n  border-radius: 50%;\n  display: inline-block;\n  cursor: pointer; \n`\nconst MicrophoneImg = styled.img`\n  position: absolute;\n  left: 26px;\n  top: 20px;\n`\nconst SpeakText = styled.span`\n  position: absolute;\n  top: 355px;\n  left: 83px;\n  width: 110px;\n`\nconst WriteText = styled.span`\n  position: absolute;\n  top: 355px;\n  left: 210px;\n  width: 110px;\n`\nconst PencilPaperImg = styled.img`\n  position: absolute;\n  left: 20px;\n  top: 16px;\n`\nconst PoweredBy = styled.span`\n  position: absolute;\n  height: 15px;\n  width: 400px;\n  top: 410px;\n  left: 0px;\n  font-size: 10px!important;\n  font-weight: normal!important;\n  font-stretch: normal!important;\n  font-style: normal!important;\n  line-height: normal!important;\n  letter-spacing: -0.18px;\n  text-align: center;\n  color: #999!important;\n`","export default __webpack_public_path__ + \"static/media/microphone-white.5d92f44a.svg\";","export default __webpack_public_path__ + \"static/media/microphone-initial.0adf5443.svg\";","export default __webpack_public_path__ + \"static/media/microphone-active.bb5588d5.svg\";","export default __webpack_public_path__ + \"static/media/Panda-Listening Pose 1-v12.832352ca.png\";","export default __webpack_public_path__ + \"static/media/Panda-Talking Pose 1-v12.285d5d90.png\";","export default __webpack_public_path__ + \"static/media/arrow.e061ec19.svg\";","export default __webpack_public_path__ + \"static/media/bar-0-8.9415a900.svg\";","export const Config ={\napi_url: process.env.NODE_ENV === 'production' \n      ? '..'\n      : 'http://localhost:5000',\n}","import React, { useState, useEffect } from \"react\"\nimport { useNavigate,useLocation } from 'react-router-dom';\nimport styled from \"styled-components\"\nimport {useReactMediaRecorder} from \"react-media-recorder\";\nimport { v4 as uuidv4 } from 'uuid';\nimport microphone from 'src/assets/images/microphone-white.svg';\nimport microphoneInit from 'src/assets/images/microphone-initial.svg';\nimport microphoneActive from 'src/assets/images/microphone-active.svg';\nimport pandaListeningImg from 'src/assets/images/Panda-Listening Pose 1-v12.png'\nimport pandaTalkingImg from 'src/assets/images/Panda-Talking Pose 1-v12.png'\nimport closeImg from 'src/assets/images/x.svg'\nimport arrowImg from 'src/assets/images/arrow.svg'\nimport micVolumeImg from 'src/assets/images/bar-0-8.svg'\nimport { Config } from 'src/config/aws';\nimport axios from 'axios';\nconst configFormData = {     \n  headers: { 'content-type': 'multipart/form-data' }\n}\naxios.defaults.baseURL = Config.api_url;\nexport default function AnswerAudio() {\n  const {\n    status, startRecording, stopRecording, mediaBlobUrl \n  } = useReactMediaRecorder({video: false, askPermissionOnMount:false});\n  const [question, setQuestion] = useState(\"Please tell me what brought you to Datasaur?\");\n  const [hidden, setHidden] = useState(false);\n  const [questionCount, setQuestionCount] = useState(1);\n  const [userId, setUserId] = useState(uuidv4());\n  const [blobs, setBlobs] = useState([]);\n  let naviage = useNavigate();\n  const uploadFile = async() => {\n    // const s3 = new ReactS3Client(s3Config);\n    // console.log('s3', s3)\n    // const filename = 'filename-to-be-uploaded';    \n    // console.log('mediablogurl', mediaBlobUrl) \n    if(!mediaBlobUrl) return;\n    let blob = await fetch(mediaBlobUrl as any).then(r=>r.blob());\n    let formData = new FormData();\n    formData.append(userId +'__' +questionCount, blob);\n    axios.post(\"/upload/fileUpload\", formData, configFormData)\n      .then(res => {\n        let {data} = res;\n        console.log('result',data)\n        if(!data.success) {\n          let message = `While uploading files, unknown errors was occured!`\n          console.log('dd', message)\n          return;\n        }\n      })\n      .catch(() => {\n      });\n    setQuestionCount(questionCount + 1);\n    startRecording();\n    if( questionCount >= 4){\n    \n      naviage('/thank-you',{ state: userId })\n    }\n  }\n  const nextQuestionFunc = async() => {\n    console.log('status', status);\n    await stopRecording();\n    console.log('status11', status);\n\n  }\n  useEffect(()=>{\n    if(status == 'idle'){\n      startRecording();\n      console.log('33')\n    }\n  },[])\n  useEffect(()=>{\n    if(mediaBlobUrl && status == 'stopped'){\n      console.log(\"444\", questionCount,mediaBlobUrl )\n      uploadFile();\n    }\n  },[mediaBlobUrl])\n  return (\n    <AnswerAudioWrapper>\n      {/* <video src={mediaBlobUrl || ''} controls loop/> */}\n      <CloseImg src={closeImg}/>\n      <PandaTalkImg src={pandaTalkingImg}/>\n      {hidden && <PandaListenImg src={pandaListeningImg}/>}\n      <Message> \n        {question}\n      </Message>\n      <ArrowImg/>\n      {hidden && <BlueCircle hidden>\n         <img src={microphone} />\n      </BlueCircle>}\n      <Circle>\n        <img src={microphoneInit} />\n        {hidden && <img src={microphoneActive} />}\n      </Circle>\n      <MicVolume src={micVolumeImg}/>\n      <Bottom>\n        <LabelProgress>Progress</LabelProgress>\n        <ProgressBar>\n            <StepCircle active={1 <= questionCount}>1</StepCircle>\n            <StepBar  active={2 <= questionCount}/>\n            <StepCircle active={2 <= questionCount}>2</StepCircle>\n            <StepBar  active={3 <= questionCount}/>\n            <StepCircle active={3 <= questionCount}>3</StepCircle>\n            <StepBar  active={4 <= questionCount}/>\n            <StepCircle active={4 <= questionCount}>4</StepCircle>\n        </ProgressBar>\n        {questionCount !== 4 ?<Button onClick={nextQuestionFunc}>Next Question →</Button> :\n          <Button onClick={nextQuestionFunc}>Finish</Button>\n        }\n      </Bottom>\n      <PoweredBy>\n        Powered by PerceptivePanda for {\"Datasaur.ai\"}\n      </PoweredBy>\n    </AnswerAudioWrapper>\n  )\n}\nconst AnswerAudioWrapper = styled.div`\n    position: absolute;\n    width: 400px;\n    height: 450px;\n    padding: 0;\n    top: 50%;\n    left: 50%;\n    margin: -225px 0 0 -200px;\n    opacity: 1.0;\n    border-radius: 10px;\n    box-shadow: 0 0 12.5px -1px rgb(0 0 0 / 10%);       \n    background-color: #e6eefd;\n    @media(min-width: 1000px){\n        transform: scale(1.7);\n    }\n`\nconst PandaTalkImg = styled.img`\n  position: absolute;\n  left: 220px;\n  top: 180px;\n  height: 208px; z-index: 1;\n`\nconst PandaListenImg = styled.img`\n  position: absolute;\n  left: 220px;\n  top: 180px;\n  height: 208px;\n  z-index: 1;\n  display: none;\n`\nconst CloseImg = styled.img`\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  top: 10px;\n  right: 5px;\n  opacity: 0.5;\n  cursor: pointer;\n`\nconst Message = styled.div`\n  position: relative;\n  left: 35px;\n  top: 55px;\n  width: 330px;\n  text-align: left;\n  height: auto;\n  line-height: 1.2;\n  text-align: left;\n  font-size: 12px;\n  background-color: #ffffff;\n  border-radius: 15px;\n  border: 1px solid #c4c4c4;\n  padding: 15px 10px 30px 15px;\n`\nconst ArrowImg = styled.div`\n    position: relative;\n    background-image: url(\"${arrowImg}\");\n    width: 30px;\n    height: 28px;\n    top: 52px;\n    left: 330px;\n`\nconst BlueCircle = styled.div`\n  position: absolute;\n  left: 89px;\n  top: 230px;\n  height: 65px;\n  width: 65px;\n  background-color: #399aff;\n  border-radius: 50%;\n  cursor: pointer; \n  img {\n    position: absolute;\n    left: 21px;\n    top: 15px;\n  }\n`\nconst Circle = styled.div`\n  position: absolute;\n  left: 83px;\n  top: 223px;\n  height: 76px;\n  width: 76px;\n  border-radius: 50%;\n  cursor: pointer;\n  img {\n    position: absolute;\n    left: 6px;\n    top: 6px;\n  }\n`\nconst MicVolume = styled.img`\n  position: absolute;\n  left: 61px;\n  top: 203px;\n`\nconst Bottom = styled.div`\n  position: absolute;\n  top: 380px;\n  left: 0px;\n  width: 100%;\n  height: 81px;\n  background-color: white;\n  border-radius: 0 0 10px 10px;\n  opacity: 1.0;\n  border-top: solid 1px #ccc;\n`\nconst LabelProgress = styled.span`\n  position: absolute;\n  left: 35px;\n  top: 5px;\n  width: 90px;\n  font-family: 'Muli', sans-serif;\n  font-size: 8px;\n  font-weight: bold;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.29;\n  letter-spacing: 0.31px;\n  text-align: left;\n  color: #a5a5a5;\n  text-transform: uppercase;\n`\nconst ProgressBar = styled.div`\n  display: flex;\n  margin-left: 35px;\n  margin-top: 18px;\n`\nconst StepCircle = styled.div<{active?:boolean}>`\n  background-color: #b1bdd4;\n  height: 20px;\n  width: 20px;\n  line-height: 20px;\n  border-radius: 50%;\n  font-size: 10px;\n  color: #929292;\n  text-align: center;\n  ${(props) => props.active && `background-color: #399aff;color: #fff;`}   \n`\nconst StepBar = styled.div<{active?:boolean}>`\n  background-color: #b1bdd4;\n  height: 3px;\n  width: 33.333333333333336px;\n  margin-top: auto;\n  margin-bottom: auto;\n  ${(props) => props.active && `background-color: #399aff;color: #fff;`}   \n`\nconst Button = styled.span`\n  position: absolute;\n  padding: 5px 0 5px 0;\n  margin: 0 0 0 0;\n  border-radius: 20px;\n  background-color: #4d9ff5;\n  cursor: pointer;\n  text-align: center;\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);    \n  font-family: 'Muli', sans-serif;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  letter-spacing: 0.06px;\n  text-align: center;\n  color: #fff;\n  user-select: none;\n  left: 230px;\n  top: 25px;\n  width: 140px;\n  text-decoration: none;\n  font-size: 13px;\n  line-height: 20px;\n`\nconst PoweredBy = styled.span`\n  position: absolute;\n  height: 15px;\n  width: 400px;\n  top: 445px;\n  left: 0px;\n  font-size: 10px!important;\n  font-weight: normal!important;\n  font-stretch: normal!important;\n  font-style: normal!important;\n  line-height: normal!important;\n  letter-spacing: -0.18px;\n  text-align: center;\n  color: #999!important;\n`","export default __webpack_public_path__ + \"static/media/speech-bubble-center.26ecf2a1.svg\";","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport pandaTalkingImg from 'src/assets/images/Panda-Talking Pose 1-v12.png'\nimport closeImg from 'src/assets/images/x.svg'\nimport SpeechBubbleCenter from 'src/assets/images/speech-bubble-center.svg'\nimport { useNavigate,useLocation } from 'react-router-dom';\n\n\nexport default function Thankyou() {\n  const [customsupport, setCusstomSupport] = useState(true);\n  let naviage = useNavigate();\n  let { state }=useLocation();\n  return (\n    <ThankWrapper>\n      <CloseImg src={closeImg}/>\n      <SpeechBubbleImg src={SpeechBubbleCenter}/>\n      {customsupport ? <Message customsupport={customsupport}>\n        Got it!<br/>\n        We'll share your feedback with customer support and they'll be in touch.\n      </Message> : <Message > Thank you for sharing your insights! </Message> }\n      <PandaTalkImg src={pandaTalkingImg} />\n      <Button onClick={()=>{naviage('/audio-result',{ state: state })}}>See Result</Button>\n      <PoweredBy>\n        Powered by PerceptivePanda for {\"Datasaur.ai\"}\n      </PoweredBy>\n    </ThankWrapper>\n  )\n}\nconst Button = styled.span`\n  position: absolute;\n  padding: 5px 0 5px 0;\n  margin: 0 0 0 0;\n  border-radius: 20px;\n  background-color: #4d9ff5;\n  cursor: pointer;\n  text-align: center;\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);    \n  font-family: 'Muli', sans-serif;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  letter-spacing: 0.06px;\n  text-align: center;\n  color: #fff;\n  user-select: none;\n  left: 46px;\n  bottom: 102px;\n  width: 140px;\n  text-decoration: none;\n  font-size: 13px;\n  line-height: 20px;\n`\nconst ThankWrapper = styled.div`\n  position: absolute;\n  width: 400px;\n  height: 450px;\n  padding: 0;\n  top: 50%;\n  left: 50%;\n  margin: -225px 0 0 -200px;\n  background-color: #e6eefd;\n  opacity: 1.0;\n  border-radius: 10px;\n  box-shadow: 0 0 12.5px -1px rgba(0, 0, 0, 0.1);    \n  @media(min-width: 1000px){\n    transform: scale(1.7);\n  }\n`\nconst SpeechBubbleImg = styled.img`\n  position: absolute;\n  left: 40px;\n  top: -10px;\n  width: 300px;\n  height: 187px;\n  margin: 4px 10px 81px 2.5px;\n  padding: 26.5px 7.5px 38px;\n  object-fit: contain;\n  border: 0;\n`\nconst PandaTalkImg = styled.img`\n  position: absolute;\n  left: 220px;\n  top: 180px;\n  width: auto;\n  height: 224px;\n`\nconst CloseImg = styled.img`\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  top: 10px;\n  right: 5px;\n  opacity: 0.5;\n  cursor: pointer;\n`\nconst Message = styled.div<{customsupport?:boolean}>`\n  position: absolute;\n  overflow: hidden;\n  font-family: 'Muli', sans-serif;\n  font-size: 18px;\n  font-weight: 900;\n  font-stretch: normal;\n  font-style: normal;\n  letter-spacing: normal;\n  text-align: center;\n  left: 76px;\n  top: 80px;\n  width: 250px;\n  height: 65px;\n  line-height: 1.15;\n  text-align: center;\n  color: #000;\n  ${(props) => props.customsupport && `    top: 33px;\n  height: 100px;`}   \n`\nconst PoweredBy = styled.span`\n  position: absolute;\n  height: 15px;\n  width: 400px;\n  top: 445px;\n  left: 0px;\n  font-size: 10px!important;\n  font-weight: normal!important;\n  font-stretch: normal!important;\n  font-style: normal!important;\n  line-height: normal!important;\n  letter-spacing: -0.18px;\n  text-align: center;\n  color: #999!important;\n`","import React from \"react\"\nimport { useLocation } from 'react-router-dom';\nimport styled from \"styled-components\"\n// import ReactAudioPlayer from 'react-audio-player';\nexport default function AudioResult() {\n  let { state } = useLocation();\n  return (\n    <AudioResultWrapper>\n      <p>User - {state}</p>\n      <div>\n        <span>Question {1}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <a href={'./recording/' + state + '__1.ogg'} target=\"_blank\">Download</a>\n      </div>\n      <div>\n        <span>Question {2}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <a href={'./recording/' + state + '__2.ogg'} target=\"_blank\">Download</a>\n      </div>\n      <div>\n        <span>Question {3}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <a href={'./recording/' + state + '__3.ogg'} target=\"_blank\">Download</a>\n      </div>\n      <div>\n        <span>Question {4}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n        <a href={'./recording/' + state + '__4.ogg'} target=\"_blank\">Download</a>\n      </div>\n    </AudioResultWrapper>\n  )\n}\nconst AudioResultWrapper = styled.div`\n  padding:20px;\n  div {\n    padding: 20px;\n  }\n`","import {\n  BrowserRouter as Router,\n  useRoutes,\n} from \"react-router-dom\";\nimport InputSelector from \"src/pages/InputSelector\"\nimport AnswerAudio from \"src/pages/AnswerAudio\"\nimport Thankyou from \"./pages/Thankyou\";\nimport AudioResult from \"./pages/AudioResult\";\n\n\nconst MainRoute = () => {\n  let routes = useRoutes([\n    { path: '/thank-you', element: <Thankyou />},\n    { path: '/audio-result', element: <AudioResult/>},\n    { path: \"/input-selector\", element: <InputSelector />},\n    { path: \"/input-selector/answer-audio\", element: <AnswerAudio />},\n  ]);\n  return routes;\n};\nconst App = () => {\n  return (\n      <Router>\n        <MainRoute />\n      </Router>\n  );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action } from \"redux\";\n\nexport interface IsLoadingState {\n  [key: string]: boolean;\n}\n\nconst getLoadingMatches = (actionType: string) =>\n  /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(actionType);\n\nconst isLoadingReducer = (state: IsLoadingState = {}, action: Action) => {\n  const matches = getLoadingMatches(action.type);\n\n  if (!matches) {\n    return state;\n  }\n\n  const [, requestName, requestStatus] = matches;\n  return {\n    ...state,\n    [requestName]: requestStatus === \"REQUEST\"\n  };\n};\n\nexport default isLoadingReducer;","export const SET_PRICE = \"priceActionTypes/SET_PRICE\";\nexport interface SetPriceAction {\n  type: typeof SET_PRICE;\n  price: string;\n}\n\nexport const GET_PRICE = \"priceActionTypes/GET_PRICE\";\nexport interface GetPriceAction {\n  type: typeof GET_PRICE;\n  price: string;\n}\n\nexport const GET_PRICE_REQUEST = \"priceActionTypes/GET_PRICE_REQUEST\";\nexport interface GetPriceRequestAction {\n  type: typeof GET_PRICE_REQUEST;\n}\n\nexport const GET_PRICE_SUCCESS = \"priceActionTypes/GET_PRICE_SUCCESS\";\nexport interface GetPriceSuccessAction {\n  type: typeof GET_PRICE_SUCCESS;\n  price: string;\n}\n\nexport const GET_PRICE_FAILURE = \"priceActionTypes/GET_PRICE_FAILURE\";\nexport interface GetPriceFailureAction {\n  type: typeof GET_PRICE_FAILURE;\n  error: Error | string;\n}\n\nexport type PriceAction =\n  | SetPriceAction\n  | GetPriceAction\n  | GetPriceRequestAction\n  | GetPriceSuccessAction\n  | GetPriceFailureAction;\n","import * as actions from \"../action/actionTypes/priceActionTypes\";\n\nexport interface PriceState {\n  price: string;\n}\n\nconst initialState: PriceState = {\n  price: \"\"\n};\n\nexport default function priceReducer(\n  state: PriceState = initialState,\n  action: actions.PriceAction\n): PriceState {\n  switch (action.type) {\n    case actions.SET_PRICE:\n    case actions.GET_PRICE_SUCCESS:\n      return {\n        price: action.price\n      };\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport isLoadingReducer from \"./isLoadingReducer\";\nimport priceReducer from \"./priceReducer\";\n\nconst rootReducer = combineReducers({\n    isLoading: isLoadingReducer,\n    price: priceReducer\n});\n\nexport type Appstate = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;","import axios from \"axios\";\n\ninterface priceResponse {\n  price: string;\n}\n\nexport async function fetchPrice(\n  price: string\n): Promise<priceResponse> {\n  return await axios.get(`https://api.price.ovh/v1/${price}`);\n}\n","import * as actions from \"../actionTypes/priceActionTypes\";\n\nexport function setPrice(price: string): actions.SetPriceAction {\n  return {\n    type: actions.SET_PRICE,\n    price\n  };\n}\n\nexport function getPrice(\n    price: string,\n): actions.GetPriceAction {\n  return {\n    type: actions.GET_PRICE,\n    price,\n  };\n}\n\nexport function getPriceRequest(): actions.GetPriceRequestAction {\n  return {\n    type: actions.GET_PRICE_REQUEST\n  };\n}\n\nexport function getPriceSuccess(\n  price: string\n): actions.GetPriceSuccessAction {\n  return {\n    type: actions.GET_PRICE_SUCCESS,\n    price\n  };\n}\n\nexport function getPriceFailure(\n  error: Error | string\n): actions.GetPriceFailureAction {\n  return {\n    type: actions.GET_PRICE_FAILURE,\n    error\n  };\n}\n","import { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\n\nimport { fetchPrice } from \"./../services/priceServices\";\nimport * as actionCreators from \"../action/actionCreators/priceActionCreators\";\nimport * as actionTypes from \"../action/actionTypes/priceActionTypes\";\n\nfunction* onLoadPrice({ price }: actionTypes.GetPriceAction) {\n  try {\n    yield put(actionCreators.getPriceRequest());\n    const { data } = yield call(fetchPrice, price);\n    yield put(actionCreators.getPriceSuccess(data.price));\n  } catch (error) {\n    // yield put(actionCreators.getPriceFailure(error.response.data.error));\n  }\n}\n\nfunction* watchOnLoadPrice() {\n  yield takeEvery(actionTypes.GET_PRICE, onLoadPrice);\n}\n\nexport default function* priceSaga() {\n  yield all([fork(watchOnLoadPrice)]);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport PriceSaga from \"./priceSaga\";\n\nexport default function* rootSaga() {\n  yield all([fork(PriceSaga)]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport rootSaga from \"./sagas/rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = () => {\n  const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"src/assets/scss/index.scss\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport configureStore from \"./store/configureStore\";\nconst store = configureStore();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}